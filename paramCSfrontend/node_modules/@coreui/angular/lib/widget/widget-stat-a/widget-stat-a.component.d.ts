import { InputSignal, TemplateRef } from '@angular/core';
import { TemplateIdDirective } from '../../shared';
import { CardComponent } from '../../card';
import * as i0 from "@angular/core";
export declare class WidgetStatAComponent extends CardComponent {
    /**
     * Sets the color context of the component to one of CoreUI’s themed colors.
     * @type Colors
     */
    /**
     * Title of the widget to display
     * @type string
     */
    readonly title: InputSignal<string | undefined>;
    /**
     * Value for your widget to display
     * @type string
     */
    readonly value: InputSignal<string | undefined>;
    templates: Record<string, TemplateRef<any>>;
    readonly contentTemplates: import("@angular/core").Signal<readonly TemplateIdDirective[]>;
    readonly contentTemplatesEffect: import("@angular/core").EffectRef;
    readonly hostClasses: import("@angular/core").Signal<Record<string, boolean>>;
    get bodyClasses(): {
        'pb-0': boolean;
        'd-flex': boolean;
        'justify-content-between': boolean;
        'align-items-start': boolean;
    };
    static ɵfac: i0.ɵɵFactoryDeclaration<WidgetStatAComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<WidgetStatAComponent, "c-widget-stat-a", ["cWidgetStatA"], { "title": { "alias": "title"; "required": false; "isSignal": true; }; "value": { "alias": "value"; "required": false; "isSignal": true; }; }, {}, ["contentTemplates"], [".chart-wrapper", "*"], true, never>;
}
