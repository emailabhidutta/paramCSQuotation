import { computed, Directive, input } from '@angular/core';
import * as i0 from "@angular/core";
export class AccordionButtonDirective {
    constructor() {
        /**
         * Toggles an accordion button collapsed state. Use in accordionHeaderTemplate. [docs]
         * @type boolean
         */
        this.collapsed = input(undefined);
        /**
         * Default type for cAccordionButton. [docs]
         * @type string
         * @default 'button'
         */
        this.type = input('button');
        this.hostClasses = computed(() => {
            return {
                'accordion-button': true,
                collapsed: this.collapsed()
            };
        });
        this.ariaExpanded = computed(() => !this.collapsed());
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: AccordionButtonDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "17.1.0", version: "18.2.9", type: AccordionButtonDirective, isStandalone: true, selector: "[cAccordionButton]", inputs: { collapsed: { classPropertyName: "collapsed", publicName: "collapsed", isSignal: true, isRequired: false, transformFunction: null }, type: { classPropertyName: "type", publicName: "type", isSignal: true, isRequired: false, transformFunction: null } }, host: { properties: { "class": "hostClasses()", "attr.type": "type()", "attr.aria-expanded": "ariaExpanded()" } }, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: AccordionButtonDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[cAccordionButton]',
                    standalone: true,
                    host: { '[class]': 'hostClasses()', '[attr.type]': 'type()', '[attr.aria-expanded]': 'ariaExpanded()' }
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3JkaW9uLWJ1dHRvbi5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JldWktYW5ndWxhci9zcmMvbGliL2FjY29yZGlvbi9hY2NvcmRpb24tYnV0dG9uL2FjY29yZGlvbi1idXR0b24uZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFPM0QsTUFBTSxPQUFPLHdCQUF3QjtJQUxyQztRQU1FOzs7V0FHRztRQUNNLGNBQVMsR0FBRyxLQUFLLENBQXNCLFNBQVMsQ0FBQyxDQUFDO1FBRTNEOzs7O1dBSUc7UUFDTSxTQUFJLEdBQUcsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBRXZCLGdCQUFXLEdBQUcsUUFBUSxDQUFDLEdBQUcsRUFBRTtZQUNuQyxPQUFPO2dCQUNMLGtCQUFrQixFQUFFLElBQUk7Z0JBQ3hCLFNBQVMsRUFBRSxJQUFJLENBQUMsU0FBUyxFQUFFO2FBQzVCLENBQUM7UUFDSixDQUFDLENBQUMsQ0FBQztRQUVNLGlCQUFZLEdBQUcsUUFBUSxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUM7S0FDM0Q7OEdBdEJZLHdCQUF3QjtrR0FBeEIsd0JBQXdCOzsyRkFBeEIsd0JBQXdCO2tCQUxwQyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxvQkFBb0I7b0JBQzlCLFVBQVUsRUFBRSxJQUFJO29CQUNoQixJQUFJLEVBQUUsRUFBRSxTQUFTLEVBQUUsZUFBZSxFQUFFLGFBQWEsRUFBRSxRQUFRLEVBQUUsc0JBQXNCLEVBQUUsZ0JBQWdCLEVBQUU7aUJBQ3hHIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29tcHV0ZWQsIERpcmVjdGl2ZSwgaW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW2NBY2NvcmRpb25CdXR0b25dJyxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaG9zdDogeyAnW2NsYXNzXSc6ICdob3N0Q2xhc3NlcygpJywgJ1thdHRyLnR5cGVdJzogJ3R5cGUoKScsICdbYXR0ci5hcmlhLWV4cGFuZGVkXSc6ICdhcmlhRXhwYW5kZWQoKScgfVxufSlcbmV4cG9ydCBjbGFzcyBBY2NvcmRpb25CdXR0b25EaXJlY3RpdmUge1xuICAvKipcbiAgICogVG9nZ2xlcyBhbiBhY2NvcmRpb24gYnV0dG9uIGNvbGxhcHNlZCBzdGF0ZS4gVXNlIGluIGFjY29yZGlvbkhlYWRlclRlbXBsYXRlLiBbZG9jc11cbiAgICogQHR5cGUgYm9vbGVhblxuICAgKi9cbiAgcmVhZG9ubHkgY29sbGFwc2VkID0gaW5wdXQ8Ym9vbGVhbiB8IHVuZGVmaW5lZD4odW5kZWZpbmVkKTtcblxuICAvKipcbiAgICogRGVmYXVsdCB0eXBlIGZvciBjQWNjb3JkaW9uQnV0dG9uLiBbZG9jc11cbiAgICogQHR5cGUgc3RyaW5nXG4gICAqIEBkZWZhdWx0ICdidXR0b24nXG4gICAqL1xuICByZWFkb25seSB0eXBlID0gaW5wdXQoJ2J1dHRvbicpO1xuXG4gIHJlYWRvbmx5IGhvc3RDbGFzc2VzID0gY29tcHV0ZWQoKCkgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICAnYWNjb3JkaW9uLWJ1dHRvbic6IHRydWUsXG4gICAgICBjb2xsYXBzZWQ6IHRoaXMuY29sbGFwc2VkKClcbiAgICB9O1xuICB9KTtcblxuICByZWFkb25seSBhcmlhRXhwYW5kZWQgPSBjb21wdXRlZCgoKSA9PiAhdGhpcy5jb2xsYXBzZWQoKSk7XG59XG4iXX0=