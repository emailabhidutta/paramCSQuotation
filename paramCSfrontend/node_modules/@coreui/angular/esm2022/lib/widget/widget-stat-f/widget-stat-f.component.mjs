import { booleanAttribute, Component, computed, contentChildren, effect, input } from '@angular/core';
import { NgClass, NgTemplateOutlet } from '@angular/common';
import { TemplateIdDirective } from '../../shared';
import { CardBodyComponent, CardComponent, CardFooterComponent } from '../../card';
import * as i0 from "@angular/core";
export class WidgetStatFComponent extends CardComponent {
    constructor() {
        super(...arguments);
        /**
         * Sets the color context of the component to one of CoreUI’s themed colors.
         * @type Colors
         */
        // override readonly color = input<Colors>();
        /**
         * Sets the text-color context of the component to one of CoreUI’s themed colors.
         * @type Colors
         */
        // override readonly textColor = input<TextColors | 'white' | 'muted'>();
        /**
         * Footer for your widget
         * @type string
         */
        this.footer = input();
        /**
         * Icon for your widget
         * @type string
         */
        this.icon = input();
        /**
         * Set padding of your component.
         * @type boolean
         */
        this.padding = input(false, { transform: booleanAttribute });
        /**
         * Title of the widget to display
         * @type string
         */
        this.title = input();
        /**
         * Value for your widget to display
         * @type string
         */
        this.value = input();
        this.templates = {};
        this.contentTemplates = contentChildren(TemplateIdDirective, { descendants: true });
        this.contentTemplatesEffect = effect(() => {
            this.contentTemplates().forEach((child) => {
                this.templates[child.id] = child.templateRef;
            });
        });
        this.cardBodyClasses = computed(() => {
            return {
                'd-flex': true,
                'align-items-center': true,
                'p-0': !this.padding()
            };
        });
        this.iconClasses = computed(() => {
            const color = this.color();
            const padding = this.padding();
            return {
                'me-3': !this.textColor(),
                'text-white': true,
                [`bg-${color}`]: !!color,
                'p-3': padding,
                'p-4': !padding,
                'rounded-start-1': !padding
            };
        });
        this.titleClasses = computed(() => {
            const textColor = this.textColor();
            return {
                'text-body-secondary': !textColor,
                small: true,
                'text-uppercase': true,
                'fw-semibold': true,
                [`text-${textColor}`]: !!textColor
            };
        });
        this.valueClasses = computed(() => {
            const textColor = this.textColor();
            return {
                'fs-6': !textColor,
                'fw-semibold': true,
                [`text-${textColor}`]: !!textColor
            };
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: WidgetStatFComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.9", type: WidgetStatFComponent, isStandalone: true, selector: "c-widget-stat-f", inputs: { footer: { classPropertyName: "footer", publicName: "footer", isSignal: true, isRequired: false, transformFunction: null }, icon: { classPropertyName: "icon", publicName: "icon", isSignal: true, isRequired: false, transformFunction: null }, padding: { classPropertyName: "padding", publicName: "padding", isSignal: true, isRequired: false, transformFunction: null }, title: { classPropertyName: "title", publicName: "title", isSignal: true, isRequired: false, transformFunction: null }, value: { classPropertyName: "value", publicName: "value", isSignal: true, isRequired: false, transformFunction: null } }, host: { properties: { "class": "hostClasses()" }, classAttribute: "card" }, queries: [{ propertyName: "contentTemplates", predicate: TemplateIdDirective, descendants: true, isSignal: true }], exportAs: ["cWidgetStatB"], usesInheritance: true, ngImport: i0, template: "<ng-container>\n  <c-card-body [ngClass]=\"cardBodyClasses()\">\n    <div [ngClass]=\"iconClasses()\">\n      <ng-container *ngTemplateOutlet=\"templates?.['widgetIconTemplate'] || defaultWidgetIconTemplate\" />\n    </div>\n    <div>\n      <div [ngClass]=\"valueClasses()\">{{ value() }}</div>\n      <div [ngClass]=\"titleClasses()\">{{ title() }}</div>\n    </div>\n  </c-card-body>\n  @if (footer() || templates?.['widgetFooterTemplate']) {\n    <c-card-footer>\n      <ng-container *ngTemplateOutlet=\"templates?.['widgetFooterTemplate'] || defaultFooterIconTemplate\" />\n    </c-card-footer>\n  }\n</ng-container>\n\n<ng-template #defaultWidgetIconTemplate>\n  <span>{{ icon() }}</span>\n</ng-template>\n\n<ng-template #defaultFooterIconTemplate>\n  <span>{{ footer() }}</span>\n</ng-template>\n", dependencies: [{ kind: "component", type: CardBodyComponent, selector: "c-card-body, [c-card-body]" }, { kind: "component", type: CardFooterComponent, selector: "c-card-footer, [c-card-footer]" }, { kind: "directive", type: NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: WidgetStatFComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c-widget-stat-f', exportAs: 'cWidgetStatB', standalone: true, imports: [CardBodyComponent, CardFooterComponent, NgClass, NgTemplateOutlet], host: { class: 'card', '[class]': 'hostClasses()' }, template: "<ng-container>\n  <c-card-body [ngClass]=\"cardBodyClasses()\">\n    <div [ngClass]=\"iconClasses()\">\n      <ng-container *ngTemplateOutlet=\"templates?.['widgetIconTemplate'] || defaultWidgetIconTemplate\" />\n    </div>\n    <div>\n      <div [ngClass]=\"valueClasses()\">{{ value() }}</div>\n      <div [ngClass]=\"titleClasses()\">{{ title() }}</div>\n    </div>\n  </c-card-body>\n  @if (footer() || templates?.['widgetFooterTemplate']) {\n    <c-card-footer>\n      <ng-container *ngTemplateOutlet=\"templates?.['widgetFooterTemplate'] || defaultFooterIconTemplate\" />\n    </c-card-footer>\n  }\n</ng-container>\n\n<ng-template #defaultWidgetIconTemplate>\n  <span>{{ icon() }}</span>\n</ng-template>\n\n<ng-template #defaultFooterIconTemplate>\n  <span>{{ footer() }}</span>\n</ng-template>\n" }]
        }] });
//# sourceMappingURL=data:application/json;base64,