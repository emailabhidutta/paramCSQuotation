import { Component, computed, input } from '@angular/core';
import { NgClass } from '@angular/common';
import * as i0 from "@angular/core";
export class HeaderComponent {
    constructor() {
        /**
         * Defines optional container wrapping children elements.
         */
        this.container = input();
        /**
         * Place header in non-static positions.
         */
        this.position = input();
        /**
         * Default role for header. [docs]
         * @type string
         * @default 'banner'
         */
        this.role = input('banner');
        this.hostClasses = computed(() => {
            return !!this.container() ? this.containerClasses() : this.headerClasses();
        });
        this.headerClasses = computed(() => {
            const position = this.position();
            return {
                header: true,
                [`header-${position}`]: !!position
            };
        });
        this.containerClasses = computed(() => {
            const container = this.container();
            return {
                container: container === true,
                [`container-${container}`]: typeof container === 'string'
            };
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: HeaderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.9", type: HeaderComponent, isStandalone: true, selector: "c-header, [c-header]", inputs: { container: { classPropertyName: "container", publicName: "container", isSignal: true, isRequired: false, transformFunction: null }, position: { classPropertyName: "position", publicName: "position", isSignal: true, isRequired: false, transformFunction: null }, role: { classPropertyName: "role", publicName: "role", isSignal: true, isRequired: false, transformFunction: null } }, host: { properties: { "attr.role": "role()", "class": "hostClasses()" } }, ngImport: i0, template: "@if (!!container()) {\n  <div [ngClass]=\"headerClasses()\">\n    <ng-content />\n  </div>\n} @else {\n  <ng-content />\n}\n", dependencies: [{ kind: "directive", type: NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: HeaderComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c-header, [c-header]', standalone: true, imports: [NgClass], host: { '[attr.role]': 'role()', '[class]': 'hostClasses()' }, template: "@if (!!container()) {\n  <div [ngClass]=\"headerClasses()\">\n    <ng-content />\n  </div>\n} @else {\n  <ng-content />\n}\n" }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmV1aS1hbmd1bGFyL3NyYy9saWIvaGVhZGVyL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZXVpLWFuZ3VsYXIvc3JjL2xpYi9oZWFkZXIvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQWUsTUFBTSxlQUFlLENBQUM7QUFDeEUsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLGlCQUFpQixDQUFDOztBQWExQyxNQUFNLE9BQU8sZUFBZTtJQVA1QjtRQVFFOztXQUVHO1FBQ00sY0FBUyxHQUFHLEtBQUssRUFBYSxDQUFDO1FBQ3hDOztXQUVHO1FBQ00sYUFBUSxHQUFHLEtBQUssRUFBYSxDQUFDO1FBQ3ZDOzs7O1dBSUc7UUFDTSxTQUFJLEdBQXdCLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUU1QyxnQkFBVyxHQUFHLFFBQVEsQ0FBQyxHQUFHLEVBQUU7WUFDbkMsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO1FBQzdFLENBQUMsQ0FBQyxDQUFDO1FBRU0sa0JBQWEsR0FBRyxRQUFRLENBQUMsR0FBRyxFQUFFO1lBQ3JDLE1BQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztZQUNqQyxPQUFPO2dCQUNMLE1BQU0sRUFBRSxJQUFJO2dCQUNaLENBQUMsVUFBVSxRQUFRLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxRQUFRO2FBQ1IsQ0FBQztRQUMvQixDQUFDLENBQUMsQ0FBQztRQUVNLHFCQUFnQixHQUFHLFFBQVEsQ0FBQyxHQUFHLEVBQUU7WUFDeEMsTUFBTSxTQUFTLEdBQUcsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDO1lBQ25DLE9BQU87Z0JBQ0wsU0FBUyxFQUFFLFNBQVMsS0FBSyxJQUFJO2dCQUM3QixDQUFDLGFBQWEsU0FBUyxFQUFFLENBQUMsRUFBRSxPQUFPLFNBQVMsS0FBSyxRQUFRO2FBQy9CLENBQUM7UUFDL0IsQ0FBQyxDQUFDLENBQUM7S0FDSjs4R0FuQ1ksZUFBZTtrR0FBZixlQUFlLGlpQkNkNUIsOEhBT0EsNENESVksT0FBTzs7MkZBR04sZUFBZTtrQkFQM0IsU0FBUzsrQkFDRSxzQkFBc0IsY0FFcEIsSUFBSSxXQUNQLENBQUMsT0FBTyxDQUFDLFFBQ1osRUFBRSxhQUFhLEVBQUUsUUFBUSxFQUFFLFNBQVMsRUFBRSxlQUFlLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIGNvbXB1dGVkLCBpbnB1dCwgSW5wdXRTaWduYWwgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5nQ2xhc3MgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuXG5pbXBvcnQgeyBQb3NpdGlvbnMgfSBmcm9tICcuLi8uLi9jb3JldWkudHlwZXMnO1xuXG50eXBlIENvbnRhaW5lciA9IGJvb2xlYW4gfCAnc20nIHwgJ21kJyB8ICdsZycgfCAneGwnIHwgJ3h4bCcgfCAnZmx1aWQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjLWhlYWRlciwgW2MtaGVhZGVyXScsXG4gIHRlbXBsYXRlVXJsOiAnLi9oZWFkZXIuY29tcG9uZW50Lmh0bWwnLFxuICBzdGFuZGFsb25lOiB0cnVlLFxuICBpbXBvcnRzOiBbTmdDbGFzc10sXG4gIGhvc3Q6IHsgJ1thdHRyLnJvbGVdJzogJ3JvbGUoKScsICdbY2xhc3NdJzogJ2hvc3RDbGFzc2VzKCknIH1cbn0pXG5leHBvcnQgY2xhc3MgSGVhZGVyQ29tcG9uZW50IHtcbiAgLyoqXG4gICAqIERlZmluZXMgb3B0aW9uYWwgY29udGFpbmVyIHdyYXBwaW5nIGNoaWxkcmVuIGVsZW1lbnRzLlxuICAgKi9cbiAgcmVhZG9ubHkgY29udGFpbmVyID0gaW5wdXQ8Q29udGFpbmVyPigpO1xuICAvKipcbiAgICogUGxhY2UgaGVhZGVyIGluIG5vbi1zdGF0aWMgcG9zaXRpb25zLlxuICAgKi9cbiAgcmVhZG9ubHkgcG9zaXRpb24gPSBpbnB1dDxQb3NpdGlvbnM+KCk7XG4gIC8qKlxuICAgKiBEZWZhdWx0IHJvbGUgZm9yIGhlYWRlci4gW2RvY3NdXG4gICAqIEB0eXBlIHN0cmluZ1xuICAgKiBAZGVmYXVsdCAnYmFubmVyJ1xuICAgKi9cbiAgcmVhZG9ubHkgcm9sZTogSW5wdXRTaWduYWw8c3RyaW5nPiA9IGlucHV0KCdiYW5uZXInKTtcblxuICByZWFkb25seSBob3N0Q2xhc3NlcyA9IGNvbXB1dGVkKCgpID0+IHtcbiAgICByZXR1cm4gISF0aGlzLmNvbnRhaW5lcigpID8gdGhpcy5jb250YWluZXJDbGFzc2VzKCkgOiB0aGlzLmhlYWRlckNsYXNzZXMoKTtcbiAgfSk7XG5cbiAgcmVhZG9ubHkgaGVhZGVyQ2xhc3NlcyA9IGNvbXB1dGVkKCgpID0+IHtcbiAgICBjb25zdCBwb3NpdGlvbiA9IHRoaXMucG9zaXRpb24oKTtcbiAgICByZXR1cm4ge1xuICAgICAgaGVhZGVyOiB0cnVlLFxuICAgICAgW2BoZWFkZXItJHtwb3NpdGlvbn1gXTogISFwb3NpdGlvblxuICAgIH0gYXMgUmVjb3JkPHN0cmluZywgYm9vbGVhbj47XG4gIH0pO1xuXG4gIHJlYWRvbmx5IGNvbnRhaW5lckNsYXNzZXMgPSBjb21wdXRlZCgoKSA9PiB7XG4gICAgY29uc3QgY29udGFpbmVyID0gdGhpcy5jb250YWluZXIoKTtcbiAgICByZXR1cm4ge1xuICAgICAgY29udGFpbmVyOiBjb250YWluZXIgPT09IHRydWUsXG4gICAgICBbYGNvbnRhaW5lci0ke2NvbnRhaW5lcn1gXTogdHlwZW9mIGNvbnRhaW5lciA9PT0gJ3N0cmluZydcbiAgICB9IGFzIFJlY29yZDxzdHJpbmcsIGJvb2xlYW4+O1xuICB9KTtcbn1cbiIsIkBpZiAoISFjb250YWluZXIoKSkge1xuICA8ZGl2IFtuZ0NsYXNzXT1cImhlYWRlckNsYXNzZXMoKVwiPlxuICAgIDxuZy1jb250ZW50IC8+XG4gIDwvZGl2PlxufSBAZWxzZSB7XG4gIDxuZy1jb250ZW50IC8+XG59XG4iXX0=