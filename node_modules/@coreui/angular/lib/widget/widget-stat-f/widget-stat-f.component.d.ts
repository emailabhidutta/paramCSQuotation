import { TemplateRef } from '@angular/core';
import { TemplateIdDirective } from '../../shared';
import { CardComponent } from '../../card';
import * as i0 from "@angular/core";
export declare class WidgetStatFComponent extends CardComponent {
    /**
     * Sets the color context of the component to one of CoreUI’s themed colors.
     * @type Colors
     */
    /**
     * Sets the text-color context of the component to one of CoreUI’s themed colors.
     * @type Colors
     */
    /**
     * Footer for your widget
     * @type string
     */
    readonly footer: import("@angular/core").InputSignal<string | undefined>;
    /**
     * Icon for your widget
     * @type string
     */
    readonly icon: import("@angular/core").InputSignal<string | undefined>;
    /**
     * Set padding of your component.
     * @type boolean
     */
    readonly padding: import("@angular/core").InputSignalWithTransform<boolean, unknown>;
    /**
     * Title of the widget to display
     * @type string
     */
    readonly title: import("@angular/core").InputSignal<string | undefined>;
    /**
     * Value for your widget to display
     * @type string
     */
    readonly value: import("@angular/core").InputSignal<string | number | undefined>;
    templates: Record<string, TemplateRef<any>>;
    readonly contentTemplates: import("@angular/core").Signal<readonly TemplateIdDirective[]>;
    readonly contentTemplatesEffect: import("@angular/core").EffectRef;
    readonly cardBodyClasses: import("@angular/core").Signal<Record<string, boolean>>;
    readonly iconClasses: import("@angular/core").Signal<Record<string, boolean>>;
    readonly titleClasses: import("@angular/core").Signal<Record<string, boolean>>;
    readonly valueClasses: import("@angular/core").Signal<Record<string, boolean>>;
    static ɵfac: i0.ɵɵFactoryDeclaration<WidgetStatFComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<WidgetStatFComponent, "c-widget-stat-f", ["cWidgetStatB"], { "footer": { "alias": "footer"; "required": false; "isSignal": true; }; "icon": { "alias": "icon"; "required": false; "isSignal": true; }; "padding": { "alias": "padding"; "required": false; "isSignal": true; }; "title": { "alias": "title"; "required": false; "isSignal": true; }; "value": { "alias": "value"; "required": false; "isSignal": true; }; }, {}, ["contentTemplates"], never, true, never>;
}
