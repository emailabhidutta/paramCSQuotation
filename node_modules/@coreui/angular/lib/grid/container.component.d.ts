import { InputSignal, InputSignalWithTransform } from '@angular/core';
import { IContainer } from './container.type';
import { Breakpoints } from '../coreui.types';
import * as i0 from "@angular/core";
export declare class ContainerComponent implements IContainer {
    /**
     * Set container 100% wide until a breakpoint.
     */
    readonly breakpoint: InputSignal<Exclude<Breakpoints, 'xs'>>;
    /**
     * Set container 100% wide, spanning the entire width of the viewport.
     * @type InputSignalWithTransform<unknown, boolean>
     */
    readonly fluid: InputSignalWithTransform<unknown, boolean>;
    readonly hostClasses: import("@angular/core").Signal<Record<string, boolean>>;
    static ɵfac: i0.ɵɵFactoryDeclaration<ContainerComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ContainerComponent, "c-container, [cContainer]", never, { "breakpoint": { "alias": "breakpoint"; "required": false; "isSignal": true; }; "fluid": { "alias": "fluid"; "required": false; "isSignal": true; }; }, {}, never, ["*"], true, never>;
}
