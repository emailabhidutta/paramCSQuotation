import { InputSignal } from '@angular/core';
import { Positions } from '../../coreui.types';
import * as i0 from "@angular/core";
type Container = boolean | 'sm' | 'md' | 'lg' | 'xl' | 'xxl' | 'fluid';
export declare class HeaderComponent {
    /**
     * Defines optional container wrapping children elements.
     */
    readonly container: InputSignal<Container | undefined>;
    /**
     * Place header in non-static positions.
     */
    readonly position: InputSignal<Positions | undefined>;
    /**
     * Default role for header. [docs]
     * @type string
     * @default 'banner'
     */
    readonly role: InputSignal<string>;
    readonly hostClasses: import("@angular/core").Signal<Record<string, boolean>>;
    readonly headerClasses: import("@angular/core").Signal<Record<string, boolean>>;
    readonly containerClasses: import("@angular/core").Signal<Record<string, boolean>>;
    static ɵfac: i0.ɵɵFactoryDeclaration<HeaderComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<HeaderComponent, "c-header, [c-header]", never, { "container": { "alias": "container"; "required": false; "isSignal": true; }; "position": { "alias": "position"; "required": false; "isSignal": true; }; "role": { "alias": "role"; "required": false; "isSignal": true; }; }, {}, never, ["*", "*"], true, never>;
}
export {};
